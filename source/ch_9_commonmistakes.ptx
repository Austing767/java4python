<?xml version="1.0"?>

<!-- Generated by Docutils 0.19 -->
<chapter xml:id="common-mistakes-id1">
    <title>Common Mistakes</title>

    <introduction>
    </introduction>

    <section xml:id="forgetting-to-declare-your-variables">
        <title>Forgetting to declare your variables</title>

        <pre>
            Histo.java:21: cannot find symbol
            symbol  : variable count
            location: class Histo
                count = new ArrayList&lt;Integer&gt;(10);
                ^
        </pre>

    </section>

    <section xml:id="not-importing-a-class">
        <title>Not importing a class</title>

        <pre>
            Histo.java:9: cannot find symbol
            symbol  : class Scanner
            location: class Histo
                Scanner data = null;
                ^
        </pre>

    </section>

    <section xml:id="forgetting-to-use-the-new-keyword-to-create-an-object">
        <title>Forgetting to use the new keyword to create an object</title>

        <p>
            Here&#x2019;s an example of the error message that occurs when you forget to use the new keyword.
            Notice that the message is pretty unhelpful.
            Java <em>thinks</em> you are trying to call the Method Scanner, but there are two problems.
            First Scanner is not really a method it is a constructor.:
        </p>

        <pre>
            Histo.java:14: cannot find symbol
            symbol  : method Scanner(java.io.File)
            location: class Histo
                data = Scanner(new File("test.dat"));
                ^
        </pre>

    </section>

    <section xml:id="forgetting-a-semicolon">
        <title>Forgetting a Semicolon</title>
        <p>
            The error "';' expected" on line 7 of <c>Histo.java</c> means that a semicolon is missing at the end of the statement <c>Scanner data = null</c>. In Java, every statement must be terminated with a semicolon (<c>;</c>) to indicate its completion. The arrow points to <c>null</c> because that's where the compiler expected to find the semicolon.
        </p>
        <pre>
            Histo.java:7: error: ';' expected
                Scanner data = null
                                   ^
        </pre>

    </section>

    <section xml:id="forgetting-to-declare-the-kind-of-object-in-a-container">
        <title>Forgetting to declare the kind of object in a container</title>
        <p>
            This is a compiler warning, not an error, indicating a potential type safety issue. It occurs because you are calling the <c>add()</c> method on <c>rawList</c>, which is an <c>ArrayList</c> used as a raw type (i.e., without specifying a generic type like <c>&lt;String&gt;</c> or <c>&lt;Integer&gt;</c>).
        </p>
                
        <p>
            When <c>ArrayList</c> is used as a raw type, the compiler cannot guarantee the type of elements being added or retrieved, leading to "unchecked" operations. The <c>E extends Object</c> part refers to the generic type parameter <c>E</c> that <c>ArrayList</c> should have, which defaults to <c>Object</c> when the type is not specified, making the <c>add()</c> call unchecked. This can lead to <c>ClassCastExceptions</c> at runtime if incompatible types are later retrieved and cast.
        </p>
        <pre>
            UncheckedWarningDemo.java:8: warning: [unchecked] unchecked call to add(E) as a member of the raw type ArrayList
                    rawList.add("Hello");
                            ^
              where E is a type-variable:
                E extends Object declared in class ArrayList
        </pre>

    </section>
</chapter>