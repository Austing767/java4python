<?xml version="1.0"?>

<!-- Generated by Docutils 0.19 -->
<chapter xml:id="common-mistakes-id1">
    <title>Common Mistakes</title>

    <introduction>
    </introduction>

    <section xml:id="forgetting-to-declare-your-variables">
        <title>Forgetting to declare your variables</title>

        <pre>
            Histo.java:21: cannot find symbol
            symbol  : variable count
            location: class Histo
                count = new ArrayList&lt;Integer&gt;(10);
                ^
        </pre>

    </section>

    <section xml:id="not-importing-a-class">
        <title>Not importing a class</title>

        <pre>
            Histo.java:9: cannot find symbol
            symbol  : class Scanner
            location: class Histo
                Scanner data = null;
                ^
        </pre>

    </section>

    <section xml:id="forgetting-to-use-the-new-keyword-to-create-an-object">
        <title>Forgetting to use the new keyword to create an object</title>

        <p>
            Here&#x2019;s an example of the error message that occurs when you forget to use the new keyword.
            Notice that the message is pretty unhelpful.
            Java <em>thinks</em> you are trying to call the Method Scanner, but there are two problems.
            First Scanner is not really a method it is a constructor.:
        </p>

        <pre>
            Histo.java:14: cannot find symbol
            symbol  : method Scanner(java.io.File)
            location: class Histo
                data = Scanner(new File("test.dat"));
                ^
        </pre>

    </section>

    <section xml:id="forgetting-a-semicolon">
        <title>Forgetting a Semicolon</title>

        <pre>
            Histo.java:19:
            ';' expected
                System.exit(0);
                ^
        </pre>

    </section>

    <section xml:id="forgetting-to-declare-the-kind-of-object-in-a-container">
        <title>Forgetting to declare the kind of object in a container</title>

        <pre>
            Note: Histo.java uses unchecked or unsafe operations. Note:
            Recompile with -Xlint:unchecked for details.
        </pre>

    </section>
</chapter>